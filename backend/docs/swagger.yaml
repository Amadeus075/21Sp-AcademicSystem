basePath: /api/v1
definitions:
  model.CourseCreateReq:
    properties:
      credit:
        type: integer
      departmentID:
        description: 院系号
        type: integer
      name:
        type: string
      number:
        type: string
    type: object
  model.CourseRes:
    properties:
      credit:
        type: integer
      department_name:
        description: 院系名
        type: string
      id:
        type: integer
      name:
        type: string
      number:
        type: string
    type: object
  model.OfferedCourse:
    properties:
      course_id:
        description: 课号
        type: integer
      id:
        type: integer
      selections:
        items:
          $ref: '#/definitions/model.Selection'
        type: array
      teacher_id:
        description: 教师工号
        type: integer
      term:
        description: 学期
        example: 22-冬季学期
        type: string
    type: object
  model.OfferedCourseRes:
    properties:
      credit:
        type: integer
      department:
        type: string
      id:
        type: integer
      name:
        type: string
      number:
        type: string
      teacher_name:
        type: string
      term:
        type: string
    type: object
  model.SelectedCourseRes:
    properties:
      credit:
        type: integer
      department:
        type: string
      name:
        type: string
      number:
        type: string
      offered_course_id:
        type: integer
      score:
        type: integer
      selection_id:
        type: integer
      student_name:
        type: string
      teacher_name:
        type: string
      term:
        type: string
    type: object
  model.Selection:
    properties:
      id:
        type: integer
      offeredCourse:
        $ref: '#/definitions/model.OfferedCourse'
        type: object
      offeredCourseID:
        type: integer
      score:
        description: 分数, -1表示未评分
        example: 75
        type: integer
      student:
        $ref: '#/definitions/model.Student'
        type: object
      studentID:
        type: integer
    type: object
  model.Student:
    properties:
      age:
        description: 年龄
        type: integer
      departmentID:
        description: 所属院系号
        type: integer
      id:
        type: integer
      name:
        description: 姓名
        type: string
      number:
        description: 学号
        type: string
      password:
        description: 密码
        example: "123"
        type: string
      selections:
        description: 选课情况
        items:
          $ref: '#/definitions/model.Selection'
        type: array
      sex:
        description: 性别
        type: string
    type: object
  model.StudentCreateReq:
    properties:
      age:
        type: integer
      departmentID:
        type: integer
      name:
        type: string
      number:
        type: string
      password:
        type: string
      sex:
        type: string
    type: object
  model.StudentRes:
    properties:
      age:
        type: integer
      department_name:
        type: string
      id:
        type: integer
      name:
        type: string
      number:
        type: string
      sex:
        type: string
    type: object
  model.TeacherCreateReq:
    properties:
      age:
        type: integer
      departmentID:
        type: integer
      name:
        type: string
      number:
        type: string
      password:
        type: string
      sex:
        type: string
    type: object
  model.TeacherRes:
    properties:
      age:
        type: integer
      department_name:
        type: string
      id:
        type: integer
      name:
        type: string
      number:
        type: string
      password:
        type: string
      sex:
        type: string
    type: object
info:
  contact: {}
  description: 教务管理系统
  license: {}
  title: Academic System
  version: "1.2"
paths:
  /course:
    get:
      description: 获取所有课程
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.CourseRes'
            type: array
      summary: 获取所有课程
      tags:
      - course
    post:
      description: 创建课程
      parameters:
      - description: course 实例
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/model.CourseCreateReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 创建课程
      tags:
      - course
  /course/{id}:
    delete:
      description: 根据id删除课程
      parameters:
      - description: course ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 根据id删除课程
      tags:
      - course
    get:
      consumes:
      - application/json
      description: 根据id获取课程信息
      parameters:
      - description: course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CourseRes'
      summary: 根据id获取课程信息
      tags:
      - course
  /login/admin:
    post:
      consumes:
      - multipart/form-data
      description: 以管理员身份登录
      parameters:
      - description: 账号
        in: formData
        name: number
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: 以管理员身份登录
      tags:
      - login
  /login/student:
    post:
      consumes:
      - multipart/form-data
      description: 以学生身份登录
      parameters:
      - description: 学号
        in: formData
        name: number
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Student'
      summary: 以学生身份登录
      tags:
      - login
  /login/teacher:
    post:
      consumes:
      - multipart/form-data
      description: 以教师身份登录
      parameters:
      - description: 账号
        in: formData
        name: number
        required: true
        type: string
      - description: 密码
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: 以教师身份登录
      tags:
      - login
  /selection:
    delete:
      description: 删除选课
      parameters:
      - description: 选课情况
        in: body
        name: selection
        required: true
        schema:
          $ref: '#/definitions/model.Selection'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 删除选课
      tags:
      - selection
    post:
      description: 创建选课
      parameters:
      - description: 选课情况
        in: body
        name: selection
        required: true
        schema:
          $ref: '#/definitions/model.Selection'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 创建选课
      tags:
      - selection
  /student:
    get:
      description: 获取所有学生信息
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.StudentRes'
            type: array
      summary: 获取所有学生信息
      tags:
      - student
    post:
      description: 创建学生
      parameters:
      - description: student 实例
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/model.StudentCreateReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 创建学生
      tags:
      - student
  /student/{id}:
    delete:
      description: 根据id删除学生
      parameters:
      - description: student ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 根据id删除学生
      tags:
      - student
    get:
      description: 根据id获取学生信息
      parameters:
      - description: student ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudentRes'
      summary: 根据id获取学生信息
      tags:
      - student
  /student/{id}/selected_course:
    get:
      consumes:
      - application/json
      description: get offered courses by student id 获取指定学生的所有课程
      parameters:
      - description: student ID
        in: path
        name: id
        required: true
        type: integer
      - description: 是否有成绩 不写即全部返回
        in: query
        name: hasScore
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SelectedCourseRes'
            type: array
      summary: 获取指定学生的所有课程
      tags:
      - student
      - offered_course
  /student/{student_id}/course/{course_id}:
    put:
      description: 更新课程成绩
      parameters:
      - description: student ID
        in: path
        name: student_id
        required: true
        type: string
      - description: course ID
        in: path
        name: course_id
        required: true
        type: string
      - description: score
        in: formData
        name: score
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 更新课程成绩
      tags:
      - selection
      - admin
  /teacher:
    get:
      description: 获取所有老师信息
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TeacherRes'
            type: array
      summary: 获取所有老师信息
      tags:
      - teacher
    post:
      description: 创建老师
      parameters:
      - description: teacher 实例
        in: body
        name: teacher
        required: true
        schema:
          $ref: '#/definitions/model.TeacherCreateReq'
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 创建老师
      tags:
      - teacher
  /teacher/{id}:
    delete:
      description: 根据id删除老师
      parameters:
      - description: teacher ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 根据id删除老师
      tags:
      - teacher
    get:
      description: 根据id获取老师信息
      parameters:
      - description: teacher ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TeacherRes'
      summary: 根据id获取老师信息
      tags:
      - teacher
  /teacher/{id}/offered_course:
    get:
      consumes:
      - application/json
      description: get offered courses by teacher id 获取指定教师的所有开课课程
      parameters:
      - description: teacher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.OfferedCourseRes'
            type: array
      summary: 获取指定教师的所有开课课程
      tags:
      - teacher
      - offered_course
  /test/delete-all:
    delete:
      description: 删除全部数据 没用
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 删除全部数据 没用
      tags:
      - test
  /test/generate-examples:
    get:
      description: 生成样例数据
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 生成样例数据
      tags:
      - test
  /test/ping:
    get:
      description: pong me!
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping!
      tags:
      - test
swagger: "2.0"
